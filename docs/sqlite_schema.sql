-- ====================================================================================
-- Файл схемы базы данных для SQLite
-- Проект: Beer Tap System
-- Версия: 2.0 (Объединенная и улучшенная)
-- Описание: Этот скрипт создает и настраивает локальные таблицы для контроллера
-- (Raspberry Pi). Он предназначен для хранения записей о наливах и системных
-- событиях в офлайн-режиме, обеспечивая отказоустойчивость.
-- ====================================================================================

-- ------------------------------------------------------------------------------------
-- Настройки производительности и надежности (PRAGMA)
-- ------------------------------------------------------------------------------------

-- Настройки (PRAGMA) для повышения производительности и надежности на SD-картах.
-- WAL (Write-Ahead Logging) позволяет одновременно читать и писать в базу, что
-- критически важно для устройства, которое постоянно опрашивает датчики и может
-- параллельно отправлять данные на сервер. Также снижает износ SD-карты.
PRAGMA journal_mode = WAL;

-- Устанавливает менее строгий, но более быстрый режим синхронизации.
-- 'NORMAL' означает, что ОС сама решает, когда физически записать данные на диск.
-- Это лучший компромисс между скоростью и надежностью для встраиваемых систем.
PRAGMA synchronous = NORMAL;


-- ====================================================================================
-- Таблица: pours
-- Назначение: Локальный журнал (очередь) для всех наливов, зафиксированных
-- контроллером. Записи здесь хранятся до тех пор, пока не будут успешно
-- синхронизированы с центральным сервером.
-- ====================================================================================
CREATE TABLE IF NOT EXISTS pours (
    -- --- Идентификаторы и ключевая информация ---
    pour_id         INTEGER PRIMARY KEY AUTOINCREMENT,  -- Локальный, простой автоинкрементный ID. Не важен для сервера.
    client_tx_id    TEXT UNIQUE NOT NULL,             -- Глобально уникальный ID транзакции, сгенерированный контроллером (например, UUIDv4). Отправляется на сервер.
    card_uid        TEXT NOT NULL,                    -- UID RFID-карты, которая была использована.
    tap_id          INTEGER NOT NULL,                 -- Статический номер крана, которым управляет данный контроллер.

    -- --- Временные метки и измерения ---
    start_ts        TEXT NOT NULL,                    -- Время начала налива в формате ISO 8601 (UTC).
    end_ts          TEXT NOT NULL,                    -- Время окончания налива в формате ISO 8601 (UTC). Позволяет анализировать длительность.
    volume_ml       INTEGER NOT NULL,                 -- Зафиксированный датчиком объем в миллилитрах.
    price_cents     INTEGER NOT NULL,                 -- Итоговая стоимость налива в центах/копейках, рассчитанная на контроллере.

    -- --- Статус и метаданные для синхронизации с сервером ---
    -- Это ключевые поля для реализации отказоустойчивой офлайн-логики.
    status          TEXT NOT NULL DEFAULT 'new'       -- Текущий статус синхронизации транзакции.
                        CHECK(status IN (
                            'new',          -- -> Налив только что произошел, еще не было попыток отправки.
                            'sent',         -- -> Данные были отправлены на сервер, ждем подтверждения.
                            'confirmed',    -- -> Сервер подтвердил, что успешно получил и сохранил данные.
                            'failed'        -- -> Произошла ошибка при отправке, нужно будет повторить.
                        )),
    attempts        INTEGER NOT NULL DEFAULT 0        -- Счетчик попыток отправки на сервер. Помогает избежать "отравленных сообщений".
);


-- ====================================================================================
-- Таблица: events
-- Назначение: Журнал для важных системных событий контроллера. Полезен для
-- удаленной диагностики и мониторинга состояния устройства.
-- ====================================================================================
CREATE TABLE IF NOT EXISTS events (
    event_id        INTEGER PRIMARY KEY AUTOINCREMENT, -- Локальный ID события.
    ts              TEXT NOT NULL,                    -- Время события в формате ISO 8601 (UTC).
    type            TEXT NOT NULL,                    -- Тип события (например, 'SYSTEM_START', 'CONNECTION_LOST', 'FIRMWARE_UPDATE').
    payload         TEXT                              -- Дополнительная информация в формате JSON (например, '{"error": "Timeout"}').
);
